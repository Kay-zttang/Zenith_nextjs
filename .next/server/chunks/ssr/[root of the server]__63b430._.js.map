{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 17, "column": 0}, "map": {"version":3,"sources":["file://D%3A/__STUDYING__/Project/zenith-nextjs/app/ui/zenith-logo.tsx"],"sourcesContent":["import { CpuChipIcon } from '@heroicons/react/24/outline';\n/*import { lusitana } from '@/app/ui/fonts';*/\nimport { kumar_one } from '@/app/ui/fonts';\n\nexport default function ZenithLogo() {\n  return (\n    <div\n      className={`${kumar_one.className} flex flex-row items-center leading-none text-white`}\n    >\n      <CpuChipIcon className=\"h-12 w-12 rotate-[15deg]\" />\n      <p className=\" text-[44px] pt-3\">Zenith</p>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA,4CAA4C,GAC5C;AAAA;AAFA;;;;AAIe,SAAS;IACtB,qBACE,6XAAC;QACC,WAAW,GAAG,qLAAA,CAAA,YAAS,CAAC,SAAS,CAAC,mDAAmD,CAAC;;0BAEtF,6XAAC,4SAAA,CAAA,cAAW;gBAAC,WAAU;;;;;;0BACvB,6XAAC;gBAAE,WAAU;0BAAoB;;;;;;;;;;;;AAGvC"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 59, "column": 0}, "map": {"version":3,"sources":["file://D%3A/__STUDYING__/Project/zenith-nextjs/app/ui/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyR,GACtT,uDACA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file://D%3A/__STUDYING__/Project/zenith-nextjs/app/ui/login-form.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/ui/login-form.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/ui/login-form.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,oYAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAqQ,GAClS,mCACA"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 97, "column": 0}, "map": {"version":3,"sources":["file://D%3A/__STUDYING__/Project/zenith-nextjs/app/login/page.tsx"],"sourcesContent":["import ZenithLogo from \"../ui/zenith-logo\";\r\nimport LoginForm from \"../ui/login-form\";\r\nimport { Suspense } from \"react\";\r\n\r\nexport default function LoginPage(){\r\n    return (\r\n        <main className=\"flex items-center justify-center md:h-screen\">\r\n            <div className=\"relative mx-auto flex w-full max-w-[400px] flex-col space-y-2.5 p-4 md:-mt-32\">\r\n                <div className=\"flex h-20 w-full items-end rounded-lg bg-red-900/75 p-3 md:h-36\">\r\n                    <div className=\"w-32 text-white md:w-36\">\r\n                        <ZenithLogo />\r\n                    </div>\r\n                </div>\r\n                <Suspense>\r\n                    <LoginForm />\r\n                </Suspense>\r\n            </div>\r\n        </main>\r\n    )\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;AAEe,SAAS;IACpB,qBACI,6XAAC;QAAK,WAAU;kBACZ,cAAA,6XAAC;YAAI,WAAU;;8BACX,6XAAC;oBAAI,WAAU;8BACX,cAAA,6XAAC;wBAAI,WAAU;kCACX,cAAA,6XAAC,4HAAA,CAAA,UAAU;;;;;;;;;;;;;;;8BAGnB,6XAAC,oVAAA,CAAA,WAAQ;8BACL,cAAA,6XAAC,2HAAA,CAAA,UAAS;;;;;;;;;;;;;;;;;;;;;AAK9B"}},
    {"offset": {"line": 156, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 290, "column": 0}, "map": {"version":3,"sources":["file://D%3A/__STUDYING__/Project/zenith-nextjs/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from 'next-auth';\r\n \r\nexport const authConfig = {\r\n  pages: {\r\n    signIn: '/login',\r\n  },\r\n  callbacks:{\r\n    authorized({auth, request:{nextUrl}}){\r\n        const isLoggedIn = !!auth?.user;\r\n        const isOnDashboard = nextUrl.pathname.startsWith('/dashboard');\r\n        if (isOnDashboard){\r\n            if(isLoggedIn) return true;\r\n            return false;            \r\n        } else if (isLoggedIn) {\r\n            return Response.redirect(new URL('/dashboard', nextUrl))\r\n        }\r\n        return true;\r\n    }\r\n  },\r\n  providers: [],\r\n} satisfies NextAuthConfig;"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;IACV;IACA,WAAU;QACR,YAAW,EAAC,IAAI,EAAE,SAAQ,EAAC,OAAO,EAAC,EAAC;YAChC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,gBAAgB,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAClD,IAAI,eAAc;gBACd,IAAG,YAAY,OAAO;gBACtB,OAAO;YACX,OAAO,IAAI,YAAY;gBACnB,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,cAAc;YACnD;YACA,OAAO;QACX;IACF;IACA,WAAW,EAAE;AACf"}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 334, "column": 0}, "map": {"version":3,"sources":["file://D%3A/__STUDYING__/Project/zenith-nextjs/auth.ts"],"sourcesContent":["import NextAuth from 'next-auth';\r\nimport Credentials from 'next-auth/providers/credentials';\r\nimport { authConfig } from './auth.config';\r\nimport { z } from 'zod';\r\nimport type { User } from '@/app/lib/definitions';\r\nimport bcrypt from 'bcrypt';\r\nimport postgres from 'postgres';\r\n\r\n \r\nconst sql = postgres(process.env.POSTGRES_URL!, { ssl: 'require' });\r\n \r\nasync function getUser(email: string): Promise<User | undefined> {\r\n  try {\r\n    const user = await sql<User[]>`SELECT * FROM users WHERE email=${email}`;\r\n    return user[0];\r\n  } catch (error) {\r\n    console.error('Failed to fetch user:', error);\r\n    throw new Error('Failed to fetch user.');\r\n  }\r\n}\r\n \r\nexport const { auth, signIn, signOut } = NextAuth({\r\n  ...authConfig,\r\n  providers: [\r\n    Credentials({\r\n      async authorize(credentials) {\r\n        const parsedCredentials = z\r\n          .object({ email: z.string().email(), password: z.string().min(6) })\r\n          .safeParse(credentials);\r\n \r\n        if (parsedCredentials.success) {\r\n          const { email, password } = parsedCredentials.data;\r\n          const user = await getUser(email);\r\n          if (!user) return null;\r\n          const passwordsMatch = await bcrypt.compare(password, user.password)\r\n\r\n          if (passwordsMatch) return user;\r\n        }\r\n\r\n \r\n        return null;\r\n      },\r\n    }),\r\n  ],\r\n});"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAGA;AACA;AANA;AACA;AAEA;;;;;;;AAMA,MAAM,MAAM,CAAA,GAAA,6LAAA,CAAA,UAAQ,AAAD,EAAE,QAAQ,GAAG,CAAC,YAAY,EAAG;IAAE,KAAK;AAAU;AAEjE,eAAe,QAAQ,KAAa;IAClC,IAAI;QACF,MAAM,OAAO,MAAM,GAAW,CAAC,gCAAgC,EAAE,MAAM,CAAC;QACxE,OAAO,IAAI,CAAC,EAAE;IAChB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,yBAAyB;QACvC,MAAM,IAAI,MAAM;IAClB;AACF;AAEO,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,CAAA,GAAA,wWAAA,CAAA,UAAQ,AAAD,EAAE;IAChD,GAAG,8GAAA,CAAA,aAAU;IACb,WAAW;QACT,CAAA,GAAA,sNAAA,CAAA,UAAW,AAAD,EAAE;YACV,MAAM,WAAU,WAAW;gBACzB,MAAM,oBAAoB,qLAAA,CAAA,IAAC,CACxB,MAAM,CAAC;oBAAE,OAAO,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK;oBAAI,UAAU,qLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC;gBAAG,GAChE,SAAS,CAAC;gBAEb,IAAI,kBAAkB,OAAO,EAAE;oBAC7B,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG,kBAAkB,IAAI;oBAClD,MAAM,OAAO,MAAM,QAAQ;oBAC3B,IAAI,CAAC,MAAM,OAAO;oBAClB,MAAM,iBAAiB,MAAM,qGAAA,CAAA,UAAM,CAAC,OAAO,CAAC,UAAU,KAAK,QAAQ;oBAEnE,IAAI,gBAAgB,OAAO;gBAC7B;gBAGA,OAAO;YACT;QACF;KACD;AACH"}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 392, "column": 0}, "map": {"version":3,"sources":["file://D%3A/__STUDYING__/Project/zenith-nextjs/app/lib/actions.ts"],"sourcesContent":["'use server';\r\nimport {z} from 'zod';\r\nimport { sql } from '@vercel/postgres';\r\nimport { revalidatePath } from 'next/cache';\r\nimport { redirect } from 'next/navigation';\r\nimport { signIn } from '@/auth';\r\nimport { AuthError } from 'next-auth';\r\n\r\nconst FormSchema = z.object({\r\n    id:z.string(),\r\n    customerId: z.string({\r\n        invalid_type_error: 'Please select a customer.'\r\n    }),\r\n    amount: z.coerce.number().gt(0, {message: 'Please enter an amount greater than $0.'}),\r\n    status: z.enum(['pending', 'paid'], {\r\n        invalid_type_error: 'Please select an invoive status.'\r\n    }),\r\n    date: z.string(),\r\n});\r\n\r\nconst CreateInvoice = FormSchema.omit({id:true, date:true});\r\n\r\nexport type State = {\r\n    errors?: {\r\n        customerId?: string[];\r\n        amount?: string[];\r\n        status?:string[];\r\n    };\r\n    message?: string | null;\r\n}\r\n\r\nexport async function createInvoice(pervState: State, formData: FormData){\r\n    /*safeparse return success or error field; no need for try{}catch(error){}*/\r\n    const validatedFields = CreateInvoice.safeParse({\r\n        customerId: formData.get('customerId'),\r\n        amount: formData.get('amount'),\r\n        status: formData.get('status'),\r\n    });\r\n\r\n    if (!validatedFields.success) {\r\n        return {\r\n          errors: validatedFields.error.flatten().fieldErrors,\r\n          message: 'Missing Fields. Failed to Create Invoice.',\r\n        };\r\n    }\r\n\r\n    const { customerId, amount, status } = validatedFields.data\r\n    /* store monetary values in cents to eliminate JavaScript floating-point errors */\r\n    const amountInCents = amount * 100 \r\n    const date = new Date().toISOString().split('T')[0];\r\n\r\n    try {\r\n        await sql`\r\n          INSERT INTO invoices (customer_id, amount, status, date)\r\n          VALUES (${customerId}, ${amountInCents}, ${status}, ${date})\r\n        `;\r\n    } catch (error) {\r\n        // If a database error occurs, return a more specific error.\r\n        return {\r\n          message: 'Database Error: Failed to Create Invoice.',\r\n        };\r\n    }\r\n\r\n    /*redirect outside try{}catch(error){}; since redirect works by throwing an error*/\r\n    /*throwing an error using: throw new Error('Some error msg here')*/\r\n    revalidatePath('/dashboard/invoices');\r\n    redirect('/dashboard/invoices');\r\n}\r\n\r\nexport async function updateInvoice(id:string, pervState: State, formData: FormData) {\r\n    const validatedFields = CreateInvoice.safeParse({\r\n        customerId: formData.get('customerId'),\r\n        amount: formData.get('amount'),\r\n        status: formData.get('status'),\r\n    });\r\n\r\n    if (!validatedFields.success) {\r\n        return {\r\n          errors: validatedFields.error.flatten().fieldErrors,\r\n          message: 'Missing Fields. Failed to Update Invoice.',\r\n        };\r\n    }\r\n\r\n    const { customerId, amount, status } = validatedFields.data\r\n    const amountInCents = amount * 100 \r\n    \r\n    try {\r\n        await sql `\r\n        Update invoices\r\n        set customer_id = ${customerId}, amount =${amountInCents}, status = ${status}\r\n        where id = ${id}\r\n        `;\r\n    } catch (error){\r\n        return {\r\n            message: 'Database Error: Failed to Create Invoice.',\r\n          };\r\n    }\r\n    \r\n\r\n    revalidatePath('/dashboard/invoices');\r\n    redirect('/dashboard/invoices');\r\n}\r\n\r\nexport async function deleteInvoice(id:string) {\r\n    \r\n    await sql `\r\n        Delete from invoices\r\n        where id = ${id}\r\n    `;\r\n    revalidatePath('/dashboard/invoices');\r\n}\r\n\r\nexport async function authenticate(\r\n    pervState: string | undefined,\r\n    formData: FormData,\r\n){\r\n    try{\r\n        await signIn('credentials', formData);\r\n    }catch(error){\r\n        if(error instanceof AuthError){\r\n            switch (error.type){\r\n                case 'CredentialsSignin':\r\n                    return 'Invalid credentials.';\r\n                default:\r\n                    return 'Something went wrong.';\r\n            }\r\n        }\r\n        throw error;\r\n    }\r\n}"],"names":[],"mappings":"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"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 539, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}